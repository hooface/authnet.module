<?php

/**
 * @file
 * Authorize.net - User Integration
 */

/* ******************************************************************************
 * Drupal hooks
 * *****************************************************************************/

/**
 * Implementation of hook_perm().
 */
function authnet_user_perm() {
  return array('administer authnet payment profiles');
}

/**
 * Implementation of hook_menu().
 */
function authnet_user_menu() {

  // List of user payment profiles.
  $items['user/%user/billing'] = array(
    'title' => 'Billing',
    'page callback' => 'authnet_user_billing_page',
    'page arguments' => array(1),
    'access callback' => 'authnet_user_access',
    'access arguments' => array(1),
    'type' => MENU_LOCAL_TASK,
    'file' => 'authnet_user.pages.inc',
  );
  $items['user/%user/billing/list'] = array(
    'title' => 'List',
    'type' => MENU_DEFAULT_LOCAL_TASK,
    'weight' => 1,
  );

  // Add a user's payment profile.
  $items['user/%user/billing/add'] = array(
    'title' => 'Add',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('authnet_user_payment_profile_form', 1),
    'access callback' => 'authnet_user_access',
    'access arguments' => array(1),
    'type' => MENU_LOCAL_TASK,
    'file' => 'authnet_user.pages.inc',
    'weight' => 2,
  );

  // Edit a user's payment profile.
  $items['user/%user/billing/%/edit'] = array(
    'title' => 'Edit',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('authnet_user_payment_profile_form', 1, 3),
    'access callback' => 'authnet_user_payment_profile_access',
    'access arguments' => array(1, 3),
    'type' => MENU_CALLBACK,
    'file' => 'authnet_user.pages.inc',
  );

  return $items;
}

/* ******************************************************************************
 * Access Callbacks
 * *****************************************************************************/

/**
 * Access callback for payment profile management.
 */
function authnet_user_access($account) {
  // Allow access if logged in user matches the account, or
  // user has perm 'administer authnet payment profiles'.
  return (($GLOBALS['user']->uid == $account->uid) || user_access('administer authnet payment profiles')) && $account->uid > 0;
}


/**
 * Access callback for editing/deleting payment profiles.
 */
function authnet_user_payment_profile_access($account, $pid) {

  // If the user has 'administer authnet payment profiles' access, return TRUE.
  if (user_access('administer authnet payment profiles')) {
    return TRUE;
  }

  // Load the customer profile id.
  $customer_profile_id = authnet_cim_entity_profile_id_load('user', $account->uid);

  // Load the payment profile id.
  $payment_profile_id = authnet_cim_entity_payment_profile_id_load($pid);

  // Load the payment profile database record.
  $payment_profile = authnet_cim_entity_payment_profile_load($payment_profile_id);

  // Return TRUE if the payment profile id matches the customer profile id.
  if ($payment_profile && $payment_profile['customer_profile_id'] == $customer_profile_id) {
    return TRUE;
  }

  // Otherwise return FALSE.
  return FALSE;
}