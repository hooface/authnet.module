<?php

/**
 * @file
 * Authorize.net - Ubercart Integration
 * A replacement for uc_authorizenet. Process payments using Authorize.net 
 */

/* ******************************************************************************
 * Drupal hooks
 * *****************************************************************************/

/**
 * Implementation of hook_form_alter().
 */
function authnet_uc_form_alter(&$form, &$form_state, $form_id) {

  // Alter the credit card terminal form in the order admin interface (/admin/store/orders/%order-id/credit)
  if ($form_id == 'uc_credit_terminal_form') {

    // Load the order.
    // Bail if no order or if order doesn't have a user
    $order = uc_order_load($form['order_id']['#value']);
    if (empty($order) || empty($order->uid)) return;

    // Load the customer's profile id.
    // Bail if no customer profile is found
    $customer_profile_id = authnet_cim_entity_profile_id_load('user', $order->uid);
    if (empty($customer_profile_id)) return;

    // Load the customer profile from Authorize.net.
    // Bail if the customer profile doesn't have payment profiles...
    $customer_profile = authnet_cim_profile_load($customer_profile_id);
    if (empty($customer_profile->paymentProfiles)) return;

    // Set the weight of the 'amount' field so that it is at the top.
    $form['amount']['#weight'] = -2;

    // Create a new fieldset for the existing payment profiles.
    $form['authnet_payment_profiles'] = array(
      '#type' => 'fieldset',
      '#title' => t('Existing payment profiles'),
      '#description' => t('This order\'s customer has the following payment profiles.'),
      '#weight' => -1,
    );

    $form['authnet_payment_profiles']['payment_profile'] = array(
      '#type' => 'radios',
      '#options' => authnet_ui_payment_profile_options($customer_profile),
    );

    // Buttons
    $form['authnet_payment_profiles']['authorize'] = array(
      '#type' => 'submit',
      '#value' => t('Charge amount to this profile'),
    );
  }
}

/* ******************************************************************************
 * Ubercart hooks
 * *****************************************************************************/

/**
 * Implementation of hook_payment_gateway().
 */
function authnet_uc_payment_gateway() {
  $gateways[] = array(
    'id' => 'authnet',
    'title' => t('Authorize.net'),
    'description' => t('Process credit card payments using Authorize.net.'),
    'settings' => 'authnet_uc_settings_form',
    'credit' => 'authnet_uc_charge',
    'credit_txn_types' => array(UC_CREDIT_AUTH_ONLY, UC_CREDIT_PRIOR_AUTH_CAPTURE, UC_CREDIT_AUTH_CAPTURE, UC_CREDIT_REFERENCE_SET, UC_CREDIT_REFERENCE_TXN),
  );

  return $gateways;
}

/**
 * Implementation of hook_payment_method_alter().
 */
function authnet_uc_payment_method_alter(&$methods) {

  /**
   * Replace the callback function of the 'credit' payment method with our own.
   * We do this so that we can offer users the ability to choose an existing card.
   * See authnet_uc_payment_method_credit() below.
   */
  if (!empty($methods)) {
    foreach ($methods as &$method) {
      if ($method['id'] == 'credit') {

        // Replace the callback function with our own.
        $method['callback'] = 'authnet_uc_payment_method_credit';

        // Stop the foreach loop.
        break;
      }
    }
  }
}

/* ******************************************************************************
 * Forms
 * *****************************************************************************/

/**
 * Callback for payment gateway settings.
 */
function authnet_uc_settings_form() {
  module_load_include('inc', 'authnet_uc', 'includes/authnet_uc.pages');
  return _authnet_uc_settings_form();
}

/* ******************************************************************************
 * Callbacks
 * *****************************************************************************/

/**
 * Callback for payment gateway settings.
 */
function authnet_uc_charge($order_id, $amount, $data) {
  module_load_include('inc', 'authnet_uc', 'includes/authnet_uc.charge');
  return _authnet_uc_charge($order_id, $amount, $data);
}

/**
 * Replacement callback for the credit payment method.
 * The goal of this function is to act as a simple wrapper around the uc_credit's normal payment method callback: uc_payment_method_credit().
 * This function is called first, does the stuff it needs to do, and in most cases passes the call of to uc_payment_method_credit().
 *
 * See authnet_uc_payment_method_alter() above.
 */
function authnet_uc_payment_method_credit($op, &$arg1, $silent = FALSE) {

  // Pass the arguments to uc_payment_method_credit().
  return uc_payment_method_credit($op, $arg1, $silent);
}