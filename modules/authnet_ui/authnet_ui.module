<?php

/**
 * @file
 * Authorize.net - UI
 */

/* ******************************************************************************
 * Form functions
 * *****************************************************************************/

/**
 * Payment profile form.
 *
 * @param $customer_profile_id
 *   The id of the Authorize.net customer profile (optional).
 * @param $payment_profile_id
 *   The id of the Authorize.net payment profile (optional).
 */
function authnet_ui_payment_profile_form($form_state, $customer_profile_id = NULL, $payment_profile_id = NULL) {

  // Set the form up as a tree.
  $form = array(
    '#tree' => TRUE,
  );

  // If a customer profile id and a payment profile id are provided, load the profile.
  if ($payment_profile_id) {
    $payment_profile = authnet_cim_payment_profile_load($customer_profile_id, $payment_profile_id);
  }

  // Otherwise, initialze a blank payment profile for default values.
  else {
    $payment_profile = authnet_payment_profile_new();
  }

  // Customer type.
  $form['customer_type'] = array(
    '#type' => 'select',
    '#title' => t('Customer type'),
    '#options' => array(
      '' => '',
      'individual' => 'Individual',
      'business' => 'Business',
    ),
    '#default_value' => $payment_profile->customerType,
  );

  // Billing address fieldset/fields.
  $form['billing'] = array(
    '#type' => 'fieldset',
    '#title' => t('Billing address'),
  );
  $form['billing']['first_name'] = array(
    '#type' => 'textfield',
    '#title' => t('First name'),
    '#required' => TRUE,
    '#default_value' => $payment_profile->billTo->firstName,
  );
  $form['billing']['last_name'] = array(
    '#type' => 'textfield',
    '#title' => t('Last name'),
    '#required' => TRUE,
    '#default_value' => $payment_profile->billTo->lastName,
  );
  $form['billing']['company'] = array(
    '#type' => 'textfield',
    '#title' => t('Company'),
    '#default_value' => $payment_profile->billTo->company,
  );
  $form['billing']['address'] = array(
    '#type' => 'textfield',
    '#title' => t('Address'),
    '#required' => TRUE,
    '#default_value' => $payment_profile->billTo->address,
  );
  $form['billing']['city'] = array(
    '#type' => 'textfield',
    '#title' => t('City'),
    '#required' => TRUE,
    '#default_value' => $payment_profile->billTo->city,
  );
  $form['billing']['state'] = array(
    '#type' => 'textfield',
    '#title' => t('State/province'),
    '#required' => TRUE,
    '#default_value' => $payment_profile->billTo->state,
  );
  $form['billing']['zip'] = array(
    '#type' => 'textfield',
    '#title' => t('Zip/postal code'),
    '#required' => TRUE,
    '#default_value' => $payment_profile->billTo->zip,
  );
  $form['billing']['country'] = array(
    '#type' => 'textfield',
    '#title' => t('Country'),
    '#required' => TRUE,
    '#default_value' => $payment_profile->billTo->country,
  );
  $form['billing']['phone'] = array(
    '#type' => 'textfield',
    '#title' => t('Phone'),
    '#default_value' => $payment_profile->billTo->phoneNumber,
  );
  $form['billing']['fax'] = array(
    '#type' => 'textfield',
    '#title' => t('Fax'),
    '#default_value' => $payment_profile->billTo->faxNumber,
  );

  // Card fieldset.
  $form['card'] = array(
    '#type' => 'fieldset',
    '#title' => t('Card information'),
  );

  // Card type.
  $card_types = array(
    'Visa',
    'MasterCard',
    'American Express',
    'Discover',
  );
  $form['card']['type'] = array(
    '#type' => 'select',
    '#title' => t('Card type'),
    '#options' => drupal_map_assoc($card_types),
    '#required' => TRUE,
  );

  // Card number.
  $form['card']['number'] = array(
    '#type' => 'textfield',
    '#title' => t('Card number'),
    '#required' => TRUE,
    '#default_value' => $payment_profile->payment->creditCard->cardNumber,
  );

  // Card expiration month.
  $months = array(
    '01',
    '02',
    '03',
    '04',
    '05',
    '06',
    '07',
    '08',
    '09',
    '10',
    '11',
    '12',
  );
  $form['card']['exp_month'] = array(
    '#type' => 'select',
    '#title' => t('Expiration month'),
    '#options' => drupal_map_assoc($months),
    '#required' => TRUE,
  );

  // Build a list of year options (current year + 10).
  $current_year = date('Y');
  $years = range($current_year, $current_year + 10);

  // Card expiration year.
  $form['card']['exp_year'] = array(
    '#type' => 'select',
    '#title' => t('Expiration year'),
    '#options' => drupal_map_assoc($years),
    '#required' => TRUE,
  );

  // Card CVV.
  $form['card']['cvv'] = array(
    '#type' => 'textfield',
    '#title' => t('Card CVV'),
    '#size' => 5,
  );

  // Save button.
  $form['submit'] = array(
    '#type' => 'submit',
    '#value' => t('Save'),
  );

  return $form;
}

/* ******************************************************************************
 * Helper functions
 * *****************************************************************************/

/**
 * Generate an array of payment profile options for a given user.
 *
 * @param $customer_profile
 *   A customer profile object.
 *
 * @return
 *   An array of payment profiles.
 */
function authnet_ui_payment_profile_options($customer_profile) {
  $options = array();
  if (!empty($customer_profile->paymentProfiles)) {
    foreach ($customer_profile->paymentProfiles as $payment_profile) {
      // At the moment we're only adding credit card payment profiles.
      if (!empty($payment_profile->payment->creditCard->cardNumber)) {

        // Add an option to the array with the last four digits and the street address.
        $options[$payment_profile->customerPaymentProfileId] = t('Credit card: ' . $payment_profile->payment->creditCard->cardNumber . ' (' . $payment_profile->billTo->address . ')');
      }
    }
  }
  return $options;
}